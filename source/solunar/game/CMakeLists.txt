file(GLOB GAME_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/*.cpp"
)

file(GLOB GAME_GAMELOGIC_SAVELOAD_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/saveload/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/saveload/*.cpp"
)

file(GLOB GAME_GAMELOGIC_CAMERA_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/camera/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/camera/*.cpp"
)

file(GLOB GAME_GAMELOGIC_PLAYER_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/player/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/player/*.cpp"
)

file(GLOB GAME_GAMELOGIC_MAINMENU_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/mainmenu/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/mainmenu/*.cpp"
)

file(GLOB GAME_GAMELOGIC_WORLD_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/world/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/world/*.cpp"
)

file(GLOB GAME_GAMELOGIC_WEAOPONS_SRC
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/weapons/*.h"
	"${CMAKE_CURRENT_SOURCE_DIR}/gamelogic/weapons/*.cpp"
)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_SRC})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_GAMELOGIC_SAVELOAD_SRC})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_GAMELOGIC_CAMERA_SRC})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_GAMELOGIC_PLAYER_SRC})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_GAMELOGIC_MAINMENU_SRC})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_GAMELOGIC_WORLD_SRC})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GAME_GAMELOGIC_WEAOPONS_SRC})

if (USE_SHARED_LIBS)
	add_library(game SHARED
		${GAME_SRC}
		${GAME_GAMELOGIC_SAVELOAD_SRC}
		${GAME_GAMELOGIC_CAMERA_SRC}
		${GAME_GAMELOGIC_PLAYER_SRC}
		${GAME_GAMELOGIC_MAINMENU_SRC}
		${GAME_GAMELOGIC_WORLD_SRC}
		${GAME_GAMELOGIC_WEAOPONS_SRC})
else()
	add_library(game STATIC
		${GAME_SRC}
		${GAME_GAMELOGIC_SAVELOAD_SRC}
		${GAME_GAMELOGIC_CAMERA_SRC}
		${GAME_GAMELOGIC_PLAYER_SRC}
		${GAME_GAMELOGIC_MAINMENU_SRC}
		${GAME_GAMELOGIC_WORLD_SRC}
		${GAME_GAMELOGIC_WEAOPONS_SRC})
endif()

if (USE_SHARED_LIBS)
	set_target_name_ex(game "solunar_gamelib_dll")
	set_engine_out_dir(game "${CMAKE_SOURCE_DIR}/bin")
endif()

target_precompile_headers(game PRIVATE "gamepch.h")
target_include_directories(game PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/../"
								PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
								
target_link_libraries(game engine)

if (USE_SHARED_LIBS)
	target_compile_definitions(game PUBLIC GAME_DLL PRIVATE GAME_COMPILE)
endif()