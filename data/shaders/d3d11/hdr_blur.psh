Texture2D g_texture 	: register(t0);
//SamplerState g_sampler 	: register(s0);
SamplerState g_sampler { AddressU = Clamp; AddressV = Wrap; };

cbuffer HDRConstants : register(b0)
{
    float4 weight[3];
	float4 texOffset;
};

float4 PSMain(float4 position : SV_POSITION, float2 texcoord : TEXCOORD) : SV_Target
{
	float4 fragColor = float4(0.f, 0.f, 0.f, 0.f);
	
    // sampled texture
    float4 color = g_texture.Sample(g_sampler, texcoord);
    
    // how much current fragment is affect on frame
    float4 result = color * weight[0];

    // loop
	const int sampleCount = 3;
#ifdef BLUR_HORIZONTAL
    for (int i = 0; i < sampleCount; ++i)
    {
        result += g_texture.Sample(g_sampler, texcoord + float2(texOffset.x * i, 0.0f)) * weight[i];
        result += g_texture.Sample(g_sampler, texcoord - float2(texOffset.x * i, 0.0f)) * weight[i];
    }
#else
    for (int i = 0; i < sampleCount; ++i)
    {
        result += g_texture.Sample(g_sampler, texcoord + float2(0.0f, texOffset.y * i)) * weight[i];
        result += g_texture.Sample(g_sampler, texcoord - float2(0.0f, texOffset.y * i)) * weight[i];
    }
#endif
  
    fragColor = result * 0.5;
	return fragColor;
}